#
# Split HEX into TETs tables 
#  Please do not modify it by hand:
#    code automatically generated by table_generator.jl
#

## Connectivities for hex2_to_tet2

const hex2_to_tet2_nface_to_mface = Array{Array{Int64,2},1}[
  [[1 2 3 4], 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[4 4 3 2 2; 3 1 1 4 1], 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[4 2; 3 4; 1 1], 
  [1 4; 2 5; 3 2], 
  empty_matrix, ] , 
]

const hex2_to_tet2_nsubface_to_mface = Array{Int64,1}[
  [2, 0, 3, 4, 1] , 
]

const hex2_to_tet2_orientation_cell_to_facet = [-1 -1; 1 1; -1 -1]

## Connectivities for hex3_to_tet3

const hex3_to_tet3_nface_to_mface = Array{Array{Int64,2},1}[
  [[1 2 3 4 5 6 7 8], 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[7 7 3 7 3 2 1 5 5 2 4 4 7 4 8 7 6 6 6; 3 2 2 1 1 1 5 2 7 4 3 7 8 8 2 6 5 2 8], 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[7 7 7 3 1 1 5 2 2 4 7 7 4 7 7 6 2 6; 3 3 2 2 5 5 2 4 4 3 4 8 8 6 6 5 6 8; 2 1 1 1 2 7 7 3 7 7 8 2 2 5 2 2 8 7], 
  [1 1 2 3 7 7 8 10 10 11 12 13 14 16 16 17 18 19; 2 4 4 5 6 4 9 3 2 12 13 2 10 9 2 18 15 16; 3 5 6 6 8 9 2 11 12 1 14 15 15 17 18 8 19 13], 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[7 1 2 7 7 2; 3 5 4 4 6 6; 2 2 3 8 5 8; 1 7 7 2 2 7], 
  [1 7 10 12 16 18; 2 6 3 13 9 15; 3 8 11 14 17 19; 4 4 2 10 2 16; 5 9 12 2 18 2; 6 2 1 15 8 13], 
  [1 5 8 11 14 17; 2 6 9 9 15 15; 3 3 1 12 7 12; 4 7 10 13 16 18], 
  empty_matrix, ] , 
]

const hex3_to_tet3_nsubface_to_mface = Array{Int64,1}[
  [11, 0, 0, 0, 3, 1, 9, 0, 7, 4, 2, 0, 6, 12, 0, 0, 5, 10, 8] , 
 
  [0, 5, 0, 1, 3, 5, 0, 1, 0, 4, 4, 0, 6, 2, 0, 3, 6, 2] , 
]

const hex3_to_tet3_orientation_cell_to_facet = [-1 -1 -1 -1 -1 -1; 1 1 1 -1 1 -1; -1 1 1 -1 -1 1; 1 1 1 1 1 1]

## Connectivities for hex4_to_tet4

const hex4_to_tet4_nface_to_mface = Array{Array{Int64,2},1}[
  [[1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16], 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[13 13 5 13 5 3 13 5 3 2 1 9 9 9 13 13 15 13 15 12 15 12 16 13 12 8 8 8 8 2 12 2 13 14 14 14 3 4 4 4 14 15 4 2 6 6 6 6 13 10 10 10 10 13 7 7 7 7 3 11 11 11 11; 5 3 3 2 2 2 1 1 1 1 9 3 2 13 15 12 12 16 16 16 3 3 3 8 8 16 3 5 2 12 9 16 14 8 16 2 4 12 8 13 12 8 2 6 8 5 13 14 10 12 9 2 14 7 8 5 3 15 11 12 9 13 15], 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[13 13 13 5 13 13 5 13 5 3 1 1 9 1 9 9 13 13 13 15 13 13 15 13 15 12 13 13 12 13 12 8 13 8 13 8 8 2 2 12 2 12 2 2 2 2 13 13 14 13 14 14 3 3 4 3 4 4 2 14 14 3 15 15 13 4 4 2 2 2 6 2 6 6 2 6 6 13 13 10 13 10 10 13 10 10 13 13 7 13 7 7 13 7 7 3 3 11 3 11 11 3 11 11; 5 5 3 3 5 3 3 2 2 2 9 9 3 9 3 2 15 15 12 12 15 12 12 16 16 16 12 8 8 8 8 16 8 5 8 5 3 12 12 9 12 9 12 12 8 16 14 14 8 14 8 16 4 4 12 4 12 8 14 12 12 15 8 8 4 8 3 4 6 6 8 6 8 5 6 14 14 10 10 12 10 12 9 10 14 14 7 7 8 7 8 5 7 15 15 11 11 12 11 12 9 11 15 15; 3 2 2 2 1 1 1 1 1 1 3 2 2 13 13 13 12 16 16 16 3 3 3 3 3 3 8 16 16 3 3 3 5 3 2 2 2 9 3 3 13 13 8 16 16 13 8 16 16 2 2 2 12 8 8 13 13 13 12 16 13 8 16 13 2 2 2 12 8 5 5 13 13 13 14 8 13 12 9 9 2 2 2 14 12 2 8 5 5 3 3 3 15 8 3 12 9 9 13 13 13 15 12 13], 
  [1 1 2 3 1 2 3 4 5 6 11 11 12 11 12 13 15 15 16 17 15 16 17 18 19 20 16 24 25 24 25 26 24 28 24 28 27 30 30 31 30 31 30 30 29 32 33 33 34 33 34 35 37 37 38 37 38 39 36 41 41 21 42 42 40 39 37 43 44 44 45 44 45 46 44 48 48 49 49 50 49 50 51 49 53 53 54 54 55 54 55 56 54 58 58 59 59 60 59 60 61 59 63 63; 2 4 4 5 7 7 8 7 8 9 9 10 13 7 14 14 16 18 18 19 2 2 21 2 21 22 24 18 20 2 22 27 1 27 4 29 29 13 6 22 4 16 29 32 32 4 24 18 35 4 36 36 22 27 39 2 40 40 30 35 33 27 19 15 4 43 43 30 29 5 46 4 47 47 36 45 47 16 14 51 4 52 52 33 50 52 24 1 56 2 57 57 15 55 57 22 12 61 2 62 62 21 60 62; 3 5 6 6 8 9 9 10 10 10 12 13 6 14 2 4 17 19 20 20 21 22 22 23 23 23 25 26 26 27 27 23 28 3 29 5 6 31 22 12 16 14 25 20 26 18 34 35 26 36 29 32 38 39 25 40 16 24 41 20 16 42 26 24 43 29 6 38 45 46 28 47 24 1 48 34 33 50 51 31 52 30 13 53 41 36 55 56 28 57 27 3 58 42 21 60 61 31 62 16 14 63 17 15], 
  empty_matrix, 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[13 13 13 13 5 1 1 1 9 13 13 13 13 15 13 13 13 12 13 13 13 8 2 2 2 12 2 2 2 2 13 13 13 14 3 3 3 4 2 2 14 3 3 15 13 13 4 2 2 4 2 2 2 6 2 2 6 13 13 13 10 13 13 10 13 13 13 7 13 13 7 3 3 3 11 3 3 11; 5 5 5 3 3 9 9 9 3 15 15 15 12 12 12 12 8 8 8 8 8 5 12 12 12 9 12 12 12 8 14 14 14 8 4 4 4 12 14 14 12 15 15 8 4 4 8 4 4 12 6 6 6 8 6 6 14 10 10 10 12 10 10 14 7 7 7 8 7 7 15 11 11 11 12 11 11 15; 3 3 2 2 2 3 3 2 2 12 12 16 16 16 8 8 16 16 5 5 3 3 9 9 3 3 8 8 16 16 8 8 16 16 12 12 8 8 12 12 16 8 8 16 8 3 3 12 12 8 8 8 5 5 14 14 8 12 12 9 9 14 14 12 8 8 5 5 15 15 8 12 12 9 9 15 15 12; 2 1 1 1 1 2 13 13 13 16 3 3 3 3 16 3 3 3 3 2 2 2 3 13 13 13 16 13 13 13 16 2 2 2 8 13 13 13 16 13 13 16 13 13 2 2 2 3 13 2 5 13 13 13 8 13 13 9 2 2 2 12 2 2 5 3 3 3 8 3 3 9 13 13 13 12 13 13], 
  empty_matrix, 
  [1 1 2 3 4 11 11 12 13 17 17 18 19 20 27 27 28 29 33 33 30 34 38 38 39 40 43 43 44 45 47 47 48 49 53 53 54 55 59 59 60 62 62 63 58 56 54 68 68 55 69 69 70 71 75 75 76 78 78 79 80 84 84 85 87 87 88 89 93 93 94 96 96 97 98 102 102 103; 2 5 5 6 7 12 14 14 15 18 21 21 22 23 19 22 30 31 30 35 35 36 39 41 41 42 44 41 41 35 48 50 50 51 54 56 56 57 52 50 61 25 21 64 65 65 66 67 65 68 70 72 72 73 69 72 77 79 81 81 82 78 81 86 88 90 90 91 87 90 95 97 99 99 100 96 99 104; 3 6 8 8 9 10 6 8 16 19 22 24 24 25 28 30 24 26 1 2 3 37 13 16 3 22 45 35 46 46 28 35 46 52 31 22 30 58 44 41 48 32 30 18 35 3 67 39 41 66 36 35 2 74 51 50 73 42 41 16 83 61 50 82 33 30 1 92 64 21 91 40 22 15 101 23 21 100; 4 7 9 10 10 13 15 16 3 20 23 25 26 26 29 31 32 32 34 36 37 4 40 42 22 15 29 27 19 28 49 51 52 45 55 57 58 27 60 61 19 63 64 28 66 67 37 53 57 43 71 73 74 33 76 77 47 80 82 83 38 85 86 59 89 91 92 34 94 95 62 98 100 101 42 103 104 17], 
  empty_matrix, 
  empty_matrix, ] , 
 
  [[13 1 13 13 13 2 2 13 3 2 3 13 2 13 2 2 13 13 13 13 3 3; 5 9 15 12 8 12 12 14 4 14 15 4 4 4 6 6 10 10 7 7 11 11; 3 3 12 8 5 9 8 8 12 12 8 8 12 12 8 14 12 14 8 15 12 15; 2 2 16 16 3 3 16 16 8 16 16 3 3 8 5 8 9 12 5 8 9 12; 1 13 3 3 2 13 13 2 13 13 13 2 13 2 13 13 2 2 3 3 13 13], 
  [1 11 15 16 24 30 30 33 37 36 21 37 43 38 44 44 49 49 54 54 59 59; 2 9 16 24 1 13 29 24 22 30 27 27 30 39 29 36 16 33 24 15 22 21; 3 12 17 25 28 31 25 34 38 41 42 39 38 25 45 48 50 53 55 58 60 63; 4 10 18 18 2 6 32 18 27 35 19 2 37 40 5 29 14 16 1 24 12 22; 5 13 19 20 27 22 20 35 39 32 23 40 6 16 46 45 51 50 56 55 61 60; 6 6 20 26 3 12 26 26 25 20 26 24 22 24 28 34 31 41 28 42 31 17; 7 7 2 2 4 4 4 4 2 33 15 4 40 43 4 4 4 4 2 2 2 2; 8 14 21 22 29 16 16 36 40 4 2 43 4 30 47 47 52 52 57 57 62 62; 9 2 22 27 5 14 24 29 16 16 24 29 16 4 24 33 30 36 27 21 16 15; 10 4 23 23 6 2 18 32 24 18 18 6 2 29 1 24 13 30 3 27 14 16], 
  [1 11 17 27 33 38 43 47 53 59 62 54 68 55 69 75 78 84 87 93 96 102; 2 12 18 19 30 39 44 48 54 52 25 56 67 57 70 69 79 78 88 87 97 96; 3 10 19 28 1 13 45 28 31 44 32 30 39 58 36 51 42 61 33 64 40 23; 4 13 20 29 34 40 29 49 55 60 63 58 53 27 71 76 80 85 89 94 98 103; 5 14 21 22 35 41 41 50 56 50 21 65 65 68 72 72 81 81 90 90 99 99; 6 6 22 30 2 16 35 35 22 41 30 35 41 65 35 50 41 50 30 21 22 21; 7 15 23 31 36 42 27 51 57 61 64 66 57 41 73 77 82 86 91 95 100 104; 8 8 24 24 3 3 46 46 30 48 18 3 56 35 2 35 16 41 1 30 15 22; 9 16 25 26 37 22 19 52 58 46 24 67 3 66 74 73 83 82 92 91 101 100; 10 3 26 32 4 15 28 45 27 19 28 37 22 43 33 47 38 59 34 62 42 17], 
  [1 6 10 15 19 23 27 31 35 39 42 37 48 38 51 55 58 62 65 69 72 76; 2 7 11 16 20 24 28 32 36 40 43 45 49 49 52 56 59 63 66 70 73 77; 3 8 12 13 21 25 29 33 37 33 12 46 46 45 53 52 60 59 67 66 74 73; 4 4 13 17 1 9 30 30 16 29 17 21 25 28 20 32 24 40 19 43 26 11; 5 9 14 18 22 26 15 34 38 41 44 47 36 50 54 57 61 64 68 71 75 78], 
  empty_matrix, ] , 
]

const hex4_to_tet4_nsubface_to_mface = Array{Int64,1}[
  [29, 0, 0, 0, 0, 0, 0, 9, 3, 1, 25, 0, 0, 21, 19, 0, 0, 0, 18, 24, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 17, 0, 20, 0, 2, 28, 12, 0, 0, 0, 4, 10, 8, 5, 0, 30, 0, 16, 13, 26, 22, 0, 6, 7, 11, 31, 27, 14, 15, 0, 23] , 
 
  [0, 0, 0, 0, 21, 0, 5, 0, 3, 1, 15, 13, 0, 21, 0, 0, 0, 8, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 20, 0, 0, 0, 14, 4, 24, 0, 0, 0, 0, 12, 0, 0, 18, 0, 0, 6, 1, 16, 6, 3, 2, 0, 0, 17, 22, 20, 17, 0, 9, 7, 0, 16, 13, 9, 12, 22, 0, 19, 2, 0, 4, 5, 19, 18, 23, 14, 15, 7, 0, 0, 11, 23, 10, 11] , 
 
  [0, 7, 5, 0, 1, 3, 7, 5, 0, 2, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 1, 3, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 8, 6, 0, 0, 0, 8, 0, 2, 6, 0, 4, 0, 0, 1, 3, 0, 8, 1, 0, 5, 4, 8, 5, 4, 2, 0, 5, 3, 2, 5, 8, 4, 0, 7, 1, 4, 7, 6, 3, 0, 7, 2, 6, 7, 2] , 
]

const hex4_to_tet4_orientation_cell_to_facet = [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1; 1 1 1 1 1 1 1 1 1 1 1 1 1 -1 1 1 1 1 1 1 1 1; -1 -1 -1 -1 -1 -1 -1 -1 -1 1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1; 1 -1 1 1 1 1 1 -1 -1 1 -1 1 1 -1 -1 -1 -1 -1 1 -1 1 -1; -1 -1 -1 -1 -1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]

## Dictionaries

const hex_to_tet_nface_to_mface = Dict(2 => hex2_to_tet2_nface_to_mface, 3 => hex3_to_tet3_nface_to_mface, 4 => hex4_to_tet4_nface_to_mface, )

const hex_to_tet_nsubface_to_mface = Dict(2 => hex2_to_tet2_nsubface_to_mface, 3 => hex3_to_tet3_nsubface_to_mface, 4 => hex4_to_tet4_nsubface_to_mface, )

const hex_to_tet_orientation_cell_to_facet = Dict(2 => hex2_to_tet2_orientation_cell_to_facet, 3 => hex3_to_tet3_orientation_cell_to_facet, 4 => hex4_to_tet4_orientation_cell_to_facet, )

